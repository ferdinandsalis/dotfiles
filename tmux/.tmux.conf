# ----------------------------------------------------------
#   FERDI'S TMUX CONFIG
# ----------------------------------------------------------
# NOTE: the overrides specify terminal capabilities
# you are overriding within tmux this value MUST
# refer to the $TERM type of the emulator you are using
set -g default-terminal "${TERM}"
# ----------------------------------------------------------
# Undercurl in tmux
# ----------------------------------------------------------
# -> https://github.com/alacritty/alacritty/issues/1628
# references
# https://github.com/neovim/neovim/pull/9097
# https://github.com/tmux/tmux/issues/1492
# Allow undercurls for terminals that support them.
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# Allow coloured undercurls for terminals that support them.
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# ----------------------------------------------------------
# Prefix
# ----------------------------------------------------------
# bind Space last-window
# Change prefix key to ALT+A. "C-" stands for CTRL, "M-" stands for ALT key
set-option -g prefix C-space
unbind-key C-b
bind-key C-space send-prefix

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# for nested tmux sessions
# bind-key a send-prefix
set -g renumber-windows on
bind a last-window

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on
# tile all windows
unbind =
bind . select-layout tiled
set -s escape-time 10
# increase scrollback buffer size
set -g history-limit 100000

set -g focus-events on
# Reload Tmux configuration file
bind r source-file ~/.tmux.conf \; display "Reloaded!"
unbind z
bind Space resize-pane -Z
#========================================================
#            DISPLAY
#========================================================
set-option -g set-titles on # Set terminal title
set-option -g set-titles-string '❐ #S ● #I'
set-option -g allow-rename on
setw -g pane-base-index 1 # Set the numbering of windows to go from 1 instead of 0 - silly programmers :|
set-option -g base-index 1
setw -g monitor-activity on
set -sg repeat-time 600 #Increase repeat-time
set -g display-time 1000 # tmux messages are displayed for one second
set -g status-interval 5
# Disable tmux statusline on zooming into a pane
# @see https://gist.github.com/bartj3/6d3bd8efd2ceaf02d443
# set-hook -g after-resize-pane "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"set -g status off\" \"set -g status on\""
#========================================================
#             NAVIGATION
#========================================================
bind C-f command-prompt -p find-session 'switch-client -t %%' #find session
# Enable mouse mode (tmux 2.1 and above)
set-option -g mouse on
# split window and fix path for tmux 1.9
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %
# set vi mode for copy mode
setw -g mode-keys vi
# more settings to make copy-mode more vim-like
bind Escape copy-mode
# Setup 'v' to begin selection as in Vim
if-shell -b '[[ "$OSTYPE" == "darwin"* ]]' \
        'COPY_CMD="pbcopy"' \
        'COPY_CMD="xclip -se c -i"'
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "#{COPY_CMD}"

# Synchronize all panes in a window
bind y setw synchronize-panes
# easier and faster switching between next/prev window
bind p previous-window
bind n next-window

# detach client
bind-key d detach
bind-key C-d detach

# Cycle to next pane
bind-key -r Tab select-pane -t :.+

# prev
bind-key BSpace previous-window

# swap panes
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

unbind -T copy-mode-vi MouseDragEnd1Pane

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
##############################
### Color & Style Settings ###
# ############################
# toggle statusbar
bind-key b set-option status

source $DOTFILES/tmux/tmux-status.conf

#========================================================

set-window-option -g automatic-rename on
###########################
#         PLUGINS         #
###########################

#========================================================
#  TPM - TMUX PACKAGE MANAGER
#========================================================
#Tmux package manager - TPM
set -g @plugin 'tmux-plugins/tpm'
#========================================================
#     SESSIONIST
#========================================================
#Tmux session bindings and session related features
set -g @plugin 'tmux-plugins/tmux-sessionist'

#Instructions
# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# Faster than the built-in prefix + s prompt for long session lists.
# prefix + C (shift + c) - prompt for creating a new session by name.
# prefix + X (shift + x) - kill current session without detaching tmux.
# prefix + S (shift + s) - switches to the last session.
# The same as built-in prefix + L that everyone seems to override with some other binding.
# prefix + @ - promote current pane into a new session.
# Analogous to how prefix + ! breaks current pane to a new window.

#========================================================
# RESURRECT
#========================================================
# Saves and restores tmux sessions beyond system crashes and restarts
set -g @plugin 'tmux-plugins/tmux-resurrect'
# Auto saves tmux environment and keeps tmux running
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'
# Restores n/vim sessions
set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-processes '"nvim->nvim +SLoad"'
#========================================================
# PAIN CONTROL
#========================================================
# Adds better bindings for switching windows,panes & resizing
set -g @plugin 'tmux-plugins/tmux-pain-control'
set-option -g @pane_resize "10"
# ---------------------------
# Resizing panes
# ---------------------------
# prefix + shift + h
# resize current pane 5 cells to the left
# prefix + shift + j
# resize 5 cells in the up direction
# prefix + shift + k
# resize 5 cells in the down direction
# prefix + shift + l
# resize 5 cells to the right
# ---------------------------
# Swapping windows
# ---------------------------
# prefix + < - moves current window one position to the left
# prefix + > - moves current window one position to the right
# ===========================
# Fingers
# ===========================
set -g @fingers-copy-command 'xclip -selection clipboard'
set -g @fingers-key f
#========================================================
#             Plugins
#========================================================
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'jbnicolai/tmux-fpp'
set -g @plugin 'Morantron/tmux-fingers'

#========================================================
#OPEN
#========================================================
set -g @plugin 'tmux-plugins/tmux-open'
#Initialize TMUX plugin manager (Keep this line at the BOTTOM of tmux config
run-shell ~/.tmux/plugins/tpm/tpm # set Zsh as your default Tmux shell
